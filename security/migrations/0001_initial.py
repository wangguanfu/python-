# -*- coding: utf-8 -*-
# Generated by Django 1.10.7 on 2017-11-06 02:13
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import jsonfield.fields
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='ACL',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'verbose_name_plural': '访问控制表',
                'verbose_name': '访问控制项',
            },
        ),
        migrations.CreateModel(
            name='Application',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(db_index=True, max_length=50, unique=True, verbose_name='应用名')),
                ('description', models.CharField(blank=True, default='', max_length=200, verbose_name='描述')),
                ('url', models.URLField(blank=True, default='', verbose_name='网站地址')),
                ('active', models.BooleanField(default=True, verbose_name='有效')),
                ('secret', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('order', models.PositiveSmallIntegerField(default=1, help_text='数值越小，排序越前', verbose_name='排序')),
                ('app_visibility', models.BooleanField(default=True, verbose_name='应用默认是否可见')),
                ('perm_visibility', models.BooleanField(default=True, verbose_name='应用功能默认是否可用')),
                ('managers', models.ManyToManyField(blank=True, related_name='managed_applications', to=settings.AUTH_USER_MODEL, verbose_name='管理员')),
                ('owner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='owned_applications', to=settings.AUTH_USER_MODEL, verbose_name='开发者')),
            ],
            options={
                'verbose_name_plural': '应用',
                'verbose_name': '应用',
                'ordering': ['order', 'name'],
                'permissions': [('can_access_user_base_info', '访问用户基本信息'), ('can_access_user_detail_info', '访问用户详细信息'), ('can_access_user_security_info', '访问用户安全信息')],
            },
        ),
        migrations.CreateModel(
            name='ApplicationAlias',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=50, unique=True, verbose_name='别名')),
                ('application', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='security.Application', verbose_name='应用')),
            ],
            options={
                'verbose_name_plural': '应用假名',
                'verbose_name': '应用假名',
            },
        ),
        migrations.CreateModel(
            name='AppUrl',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=50, verbose_name='描述')),
                ('url', models.CharField(max_length=500, verbose_name='URL')),
                ('application', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='security.Application', verbose_name='应用')),
            ],
            options={
                'verbose_name_plural': '路径',
                'verbose_name': '路径',
                'ordering': ['application', 'url'],
            },
        ),
        migrations.CreateModel(
            name='Function',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='功能名称')),
                ('slug', models.SlugField(verbose_name='英文名称')),
                ('path', models.CharField(max_length=1024, verbose_name='功能路径')),
                ('order', models.PositiveSmallIntegerField(default=1, help_text='数字越小，排序越前', verbose_name='排序')),
                ('folder', models.BooleanField(default=False, verbose_name='是否是目录')),
                ('application', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='functions', to='security.Application', verbose_name='应用')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='security.Function', verbose_name='上级')),
            ],
            options={
                'verbose_name_plural': '应用功能（菜单）',
                'verbose_name': '应用功能',
                'ordering': ['application', 'order'],
            },
        ),
        migrations.CreateModel(
            name='Permission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, help_text='请使用英文', max_length=200, verbose_name='权限名')),
                ('description', models.CharField(blank=True, default='', help_text='中文名称', max_length=200, verbose_name='权限描述')),
                ('comment', models.TextField(blank=True, null=True, verbose_name='备注')),
                ('application', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='permissions', to='security.Application', verbose_name='应用')),
            ],
            options={
                'verbose_name_plural': '权限',
                'verbose_name': '权限',
                'ordering': ['application', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Property',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', jsonfield.fields.JSONField(blank=True, default={}, null=True, verbose_name='自定义内容')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('acl', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='properties', to='security.ACL', verbose_name='属性')),
                ('application', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='security.Application', verbose_name='应用')),
            ],
            options={
                'verbose_name_plural': '属性',
                'verbose_name': '属性',
            },
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, help_text='请使用英文', max_length=200, verbose_name='角色名')),
                ('description', models.CharField(blank=True, default='', help_text='请使用中文，不建议太长', max_length=200, verbose_name='角色中文描述')),
                ('comment', models.TextField(blank=True, null=True, verbose_name='备注')),
                ('application', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='roles', to='security.Application', verbose_name='应用')),
                ('permissions', models.ManyToManyField(blank=True, related_name='roles', to='security.Permission', verbose_name='角色拥有权限')),
                ('urls', models.ManyToManyField(blank=True, related_name='roles', to='security.AppUrl', verbose_name='角色可访问的URL')),
            ],
            options={
                'verbose_name_plural': '角色',
                'verbose_name': '角色',
                'ordering': ['application', 'name'],
            },
        ),
        migrations.AddField(
            model_name='function',
            name='view_permission',
            field=models.ForeignKey(blank=True, help_text='空为对所有用户实行默认可见状态，否则仅对拥有该权限的用户可见', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='security.Permission', verbose_name='对应权限'),
        ),
        migrations.AddField(
            model_name='application',
            name='view_permission',
            field=models.ForeignKey(blank=True, help_text='空为对所有用户实行默认可见状态，否则仅对拥有该权限的用户可见', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='security.Permission', verbose_name='可见权限'),
        ),
        migrations.AddField(
            model_name='acl',
            name='permissions',
            field=models.ManyToManyField(blank=True, related_name='assigned_acls', to='security.Permission', verbose_name='权限'),
        ),
        migrations.AddField(
            model_name='acl',
            name='roles',
            field=models.ManyToManyField(blank=True, related_name='assigned_acls', to='security.Role', verbose_name='角色'),
        ),
        migrations.AddField(
            model_name='acl',
            name='urls',
            field=models.ManyToManyField(blank=True, related_name='assigned_urls', to='security.AppUrl', verbose_name='路径'),
        ),
        migrations.AddField(
            model_name='acl',
            name='user',
            field=models.OneToOneField(editable=False, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='域账户'),
        ),
        migrations.AlterUniqueTogether(
            name='role',
            unique_together=set([('application', 'name')]),
        ),
        migrations.AlterIndexTogether(
            name='role',
            index_together=set([('application', 'name')]),
        ),
        migrations.AlterUniqueTogether(
            name='property',
            unique_together=set([('acl', 'application')]),
        ),
        migrations.AlterUniqueTogether(
            name='permission',
            unique_together=set([('application', 'name')]),
        ),
        migrations.AlterIndexTogether(
            name='permission',
            index_together=set([('application', 'name')]),
        ),
        migrations.AlterUniqueTogether(
            name='function',
            unique_together=set([('application', 'slug'), ('application', 'name')]),
        ),
        migrations.AlterUniqueTogether(
            name='appurl',
            unique_together=set([('application', 'url')]),
        ),
    ]
